plugins {
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

loom {
    mods {
        forge {
            sourceSet project(":forge").sourceSets.main
        }
    }

    forge {
        mixinConfig "jamlib.mixins.json"
        mixinConfig "jamlib.client.mixins.json"
    }
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

repositories {
    maven {
        name = "Forge"
        url = "https://maven.minecraftforge.net/releases/"
    }
}

dependencies {
    forge libs.forge
    modImplementation libs.architectury.forge
    forgeRuntimeLibrary libs.jankson

    implementation project(path: ":forge", configuration: "namedElements")
    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    common(project(path: ":testmod-common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":testmod-common", configuration: "transformProductionForge")) { transitive false }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}
